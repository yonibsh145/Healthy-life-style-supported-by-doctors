{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaha\\\\Documents\\\\GitHub\\\\Healthy-life-style-supported-by-doctors\\\\lifestyle-builder\\\\src\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterForm() {\n  _s();\n  const [formValues, setFormValues] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const updateFormValues = event => {\n    setFormValues({\n      ...formValues,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Do something with the form data, like sending it to a server\n    console.log(formData);\n\n    // Check if any fields are empty\n    if (formData.username.trim() === \"\" || formData.email.trim() === \"\" || formData.password.trim() === \"\" || formData.confirmPassword.trim() === \"\") {\n      alert(\"Please fill out all fields\");\n      return;\n    }\n\n    // Check if email is valid\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(formData.email)) {\n      alert(\"Please enter a valid email address\");\n      return;\n    }\n\n    // Check if passwords match\n    if (formData.password !== formData.confirmPassword) {\n      alert(\"Passwords do not match\");\n      return;\n    }\n\n    // Check if username is taken (this is just an example, you would need to implement your own check here)\n    if (formData.username === \"takenUsername\") {\n      alert(\"Username is already taken\");\n      return;\n    }\n\n    // If all validation passes, you can send the form data to the server or do something else with it\n    console.log(\"Form data is valid\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: formData.username,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: formData.confirmPassword,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterForm, \"rtDai6czhLtAuGR0kF514Sve3fQ=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RegisterForm","_s","formValues","setFormValues","username","email","password","confirmPassword","updateFormValues","event","target","name","value","handleSubmit","preventDefault","console","log","formData","trim","alert","emailRegex","test","onSubmit","children","type","onChange","handleChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shaha/Documents/GitHub/Healthy-life-style-supported-by-doctors/lifestyle-builder/src/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './register.css';\r\n\r\nfunction RegisterForm() {\r\n\r\n  const [formValues, setFormValues] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const updateFormValues = (event) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Do something with the form data, like sending it to a server\r\n    console.log(formData);\r\n\r\n      // Check if any fields are empty\r\n  if (\r\n    formData.username.trim() === \"\" ||\r\n    formData.email.trim() === \"\" ||\r\n    formData.password.trim() === \"\" ||\r\n    formData.confirmPassword.trim() === \"\"\r\n  ) {\r\n    alert(\"Please fill out all fields\");\r\n    return;\r\n  }\r\n  \r\n    // Check if email is valid\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(formData.email)) {\r\n      alert(\"Please enter a valid email address\");\r\n      return;\r\n    }\r\n  \r\n    // Check if passwords match\r\n    if (formData.password !== formData.confirmPassword) {\r\n      alert(\"Passwords do not match\");\r\n      return;\r\n    }\r\n  \r\n    // Check if username is taken (this is just an example, you would need to implement your own check here)\r\n    if (formData.username === \"takenUsername\") {\r\n      alert(\"Username is already taken\");\r\n      return;\r\n    }\r\n  \r\n    // If all validation passes, you can send the form data to the server or do something else with it\r\n    console.log(\"Form data is valid\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Username:\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={formData.username}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Email:\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Password:\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Confirm Password:\r\n        <input\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          value={formData.confirmPassword}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <br />\r\n      <button type=\"submit\">Register</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}